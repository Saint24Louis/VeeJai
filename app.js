let allQuestions=[];let sessionQuestions=[];let currentIndex=0;
const SESSION_SIZE=40;let timerInterval;let timeLeft=2100; // 35 mins
async function loadQuestions(){const res=await fetch('questions.json');allQuestions=await res.json();}
function shuffle(arr){for(let i=arr.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[arr[i],arr[j]]=[arr[j],arr[i]];}}
function startSession(){sessionQuestions=[...allQuestions];shuffle(sessionQuestions);sessionQuestions=sessionQuestions.slice(0,SESSION_SIZE);
sessionQuestions.forEach(q=>q.userAnswer=null);currentIndex=0;document.getElementById('total').textContent=SESSION_SIZE;timeLeft=2100;startTimer();showQuestion();}
function startTimer(){clearInterval(timerInterval);timerInterval=setInterval(()=>{timeLeft--;updateTimer();if(timeLeft<=0){clearInterval(timerInterval);showResults();}},500);} // 0.5 sec = 1 sec
function updateTimer(){const m=Math.floor(timeLeft/60);const s=timeLeft%60;const t=`${m}:${s.toString().padStart(2,'0')}`;const timerEl=document.getElementById('timer');timerEl.textContent=t;if(timeLeft<=300){timerEl.classList.add('warning');}}
function showQuestion(){const q=sessionQuestions[currentIndex];document.getElementById('qnum').textContent=currentIndex+1;document.getElementById('questionText').textContent=q.q;const choicesDiv=document.getElementById('choices');choicesDiv.innerHTML='';const letters=['A','B','C','D'];q.choices.forEach((c,i)=>{const div=document.createElement('div');div.className='choice';div.dataset.letter=letters[i];div.textContent=letters[i]+'. '+c;if(q.userAnswer===letters[i])div.classList.add('selected');div.addEve...
function showResults(){clearInterval(timerInterval);let score=0;const reviewDiv=document.getElementById('answerReview');reviewDiv.innerHTML='';sessionQuestions.forEach((q,idx)=>{const user=q.userAnswer;const correct=q.answer;const block=document.createElement('div');if(user===correct){score++;block.className='correct';block.innerHTML=`<strong>Q${idx+1}:</strong> ${q.q}<br> Your answer: ${user} — Correct`;}else{block.className='incorrect';const userText=user?`${user} — ${q.choices[['A','B','C','D'].indexOf(user)]}`:'No answer';const correctText=`${correct} — ${q.choices[['A','B','C','D'].indexOf(correct)]}`;block.innerHTML=`<strong>Q${idx+1}:</strong> ${q.q}<br> Your answer: ${userText}<br> Correct: ${correctText}`;}reviewDiv.appendChild(block);});const percent=Math.round((score/SESSION_SIZE)*100);document.getElementById('resultText').textContent=`Score: ${score} / ${SESSION_SIZE} (${percent}%)`;document.getElementById('quiz-app').querySelectorAll('.card').forEach(c=>c.classList.add('hidden'));document.getElementById('resultCard').classList.remove('hidden');}
document.addEventListener('DOMContentLoaded',async()=>{await loadQuestions();document.getElementById('startBtn').addEventListener('click',()=>{startSession();document.getElementById('intro').classList.add('hidden');document.getElementById('questionCard').classList.remove('hidden');});document.getElementById('nextBtn').addEventListener('click',()=>{if(currentIndex<SESSION_SIZE-1){currentIndex++;showQuestion();}});document.getElementById('prevBtn').addEventListener('click',()=>{if(currentIndex>0){currentIndex--;showQuestion();}});document.getElementById('submitBtn').addEventListener('click',()=>{showResults();});document.getElementById('retakeBtn').addEventListener('click',()=>{startSession();document.getElementById('resultCard').classList.add('hidden');document.getElementById('questionCard').classList.remove('hidden');});});